 // This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// schema.prisma
 
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Penduduk {
  nik              String            @id
  no_kk            String
  nama_lengkap     String
  nama_ibu         String?
  nama_ayah        String?
  jenis_kelamin    String
  tempat_lahir     String
  tanggal_lahir    DateTime
  alamat           String
  rt               Int
  rw               Int
  pekerjaan        String?
  agama            String?

  riwayatLayanan   RiwayatLayanan[]     @relation("PendudukRiwayat")
  permohonanSurat  PermohonanSurat[]    @relation("PendudukPermohonan")
}

model RiwayatLayanan {
  no_resi     String      @id
  nik         String
  date        DateTime
  keterangan  String
  status      String      // Menunggu | Diproses | Ditolak | Selesai

  penduduk    Penduduk     @relation("PendudukRiwayat", fields: [nik], references: [nik])
  logStatus   LogPerubahanStatus[]
  permohonan  PermohonanSurat?

  @@index([nik])
}

model PermohonanSurat {
  id             String   @id @default(cuid())
  nik            String
  jenis_surat    String   // contoh: "Beda Identitas", "Domisili", "Permohonan KTP"
  tanggal        DateTime @default(now())
  status         String   @default("Menunggu") // Menunggu, Diproses, Selesai
  keterangan     String?  // opsional jika diperlukan
  data_dinamis   Json?    // data variatif sesuai jenis surat
  no_resi        String   @unique

  penduduk       Penduduk       @relation("PendudukPermohonan", fields: [nik], references: [nik])
  riwayat        RiwayatLayanan @relation(fields: [no_resi], references: [no_resi])

  @@index([nik])
}

model Admin {
  id       Int     @id @default(autoincrement())
  nama     String
  email    String   @unique
  password String

  logStatus LogPerubahanStatus[]
}

model LogPerubahanStatus {
  id               Int              @id @default(autoincrement())
  no_resi          String
  admin_id         Int
  status_lama      String
  status_baru      String
  waktu_perubahan  DateTime

  riwayatLayanan   RiwayatLayanan @relation(fields: [no_resi], references: [no_resi])
  admin            Admin          @relation(fields: [admin_id], references: [id])

  @@index([no_resi])
  @@index([admin_id])
}




